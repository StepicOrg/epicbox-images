plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
    id 'scala'
}

sourceCompatibility = 11

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.scala-lang:scala-library:2.12.7'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-swing-junit:3.8.0'
    testImplementation 'com.google.code.gson:gson:2.8.5'
    testImplementation 'com.github.hyperskill:hs-test:v8'
}

sourceSets {
    main {
        java.srcDir 'src'
        scala.srcDir 'src'
    }
    test {
        java.srcDir 'test'
        scala.srcDir 'test'
    }
}

test {
    systemProperty "insideDocker", "true"
    systemProperty "file.encoding", "utf-8"
    outputs.upToDateWhen { false }
    afterTest { TestDescriptor test, TestResult result ->
        if (result.resultType == TestResult.ResultType.FAILURE) {
            def message = result.exception?.message ?: "Wrong answer"
            def lines = message.readLines()
            println "#educational_plugin FAILED + " + lines[0]
            lines[1..-1].forEach { line ->
                println "#educational_plugin" + line
            }
        }
    }

    compileJava.options.encoding = 'UTF-8'
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}
